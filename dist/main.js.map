{"version":3,"file":"main.js","mappings":"mBAAA,MAkBA,EAlBwB,CAACA,EAAaC,EAAeC,KACnD,MAAMC,EAAWC,SAASC,cAAcH,GAcxC,OAZAC,EAASG,iBAAiB,SAAS,KACjC,MAAMC,EAAuBN,EAAcO,OAETR,EAAYS,UAAUC,MAAMC,OAC3DJ,KAG+BN,GAChCD,EAAYS,UAAUG,OAAOX,EAC/B,IAGKE,CAAQ,ECCXU,EAAkB,EAAGC,eAAcC,cAIhC,CACLC,gBAJsB,KACtBD,EAAQN,UAAUG,OAAOE,EAAa,IAOpCG,EAAkB,KACtB,MAAMC,EAAW,GAiBjB,MAAO,CACLC,aAhBmB,WACnB,OAAOD,EAASV,MAClB,EAeEY,WAbiB,WACjB,OAAOF,EAASP,OAAO,GAAGU,IAAI,EAChC,EAYEC,iBAVuB,WACvB,OAAOJ,EAASP,OAAO,GAAGY,UAAUZ,OAAO,GAAGU,IAAI,EACpD,EASEG,MAPY,SAA2BC,GACvC,OAAOP,EAASQ,KAAKD,EACvB,EAMC,EAGGE,EAAsB,EAC1BC,kBACAC,uBACAC,kBACAC,mBAEA,MAEMC,EAA6B,KACjCnB,EAAgB,CACdC,aAAcc,EACdb,QAASe,EAAgBV,eACxBJ,iBAAiB,EAqBhBiB,EACJ,SACEzB,EACAR,EACAkC,EACAC,GAGE3B,GAAU,GACVR,EAAYS,UAAUC,QAAUyB,GAChCD,EAAkBzB,UAAUC,QAAUyB,IA3B1CtB,EAAgB,CACdC,aAAcc,EACdb,QAASe,EAAgBR,qBACxBN,kBAG4C,EAC/CmB,EACAC,KAGED,EAAe1B,UAAUC,QAAU0B,EAAoB3B,UAAUC,OAEjEsB,GACF,EAiBIK,CACErC,EACAkC,GAGN,EAqBF,MAAO,CACLI,YApBkB,KAhDYR,EAAgBN,MAAMK,GAkDpDG,IAEA,MAAMO,EAAwBT,EAAgBX,eACxCqB,EAAoBV,EAAgBV,aACpCqB,EAA2BX,EAAgBR,mBAC3CoB,EAA6Bb,EAAqBpB,UAAUC,MAElEuB,EACEM,EACAC,EACAC,EACAC,GAGF,EAAgBF,EAAmBZ,EAAiBG,EAAa,EAKlE,EAGGY,EAAgB1B,IAChB2B,EAAuB3B,IAgD7B,EA9CiB,EACf4B,kBACAC,mBACAC,aACAZ,iBACAa,wBACAC,oBAmCO,CACLC,gBAlCsB,KACtBL,EAAgBM,SAASpC,IACvBA,EAAQT,iBAAiB,SAAU8C,IACjCA,EAAEC,kBAEF,MAAMC,EA/Ie,GAC3BC,wBACAD,yBAOO,CACLE,iBANuB,IAErBD,EAAsBE,aAAaH,KAyINI,CAAqB,CAC9CH,sBAAuBxC,EACvBuC,mBAAoBR,IACnBU,mBAEGG,EAAavD,SAASC,cAC1B,GAAG0C,MAAeO,OAGpBK,EAAWrD,iBAAiB,SAAUsD,GAAOA,EAAGP,oBAEhD1B,EAAoB,CAClBC,gBAAiBO,EACjBN,qBAAsB8B,EACtB7B,gBAAiBa,EACjBZ,aAAckB,IACbX,cAEHX,EAAoB,CAClBC,gBAAiBoB,EACjBnB,qBAAsBd,EACtBe,gBAAiBc,EACjBb,aAAckB,IACbX,aAAa,GAChB,GACF,ICvKNuB,OAAOvD,iBAAiB,QAAQ,KAC9B,MAAMwD,EAAa1D,SAAS2D,iBAAiB,0BAE7C,EAAS,CACPlB,gBAAiBiB,EACjBhB,iBAAkB,oBAClBC,WAAY,wBACZZ,eAAgB,UAChBa,sBAAuB,iBACvBC,cAAe,6BACdC,iBAAiB,G","sources":["webpack://@aloe_vera/drop-down-menus/./src/js/close-toggler.js","webpack://@aloe_vera/drop-down-menus/./src/js/nav-func.js","webpack://@aloe_vera/drop-down-menus/./src/index.js"],"sourcesContent":["const closeSubNavItem = (lastElement, classListVals, closerObj) => {\n  const closeObj = document.querySelector(closerObj);\n\n  closeObj.addEventListener('click', () => {\n    const classListValueLength = classListVals.length;\n\n    const lastElementClassListValue = lastElement.classList.value.slice(\n      -classListValueLength,\n    );\n\n    if (lastElementClassListValue === classListVals) {\n      lastElement.classList.toggle(classListVals);\n    }\n  });\n\n  return closeObj;\n};\n\nexport default closeSubNavItem;\n","import outsideDropDown from './close-toggler';\n\nconst elementDataAttribute = ({\n  elementToGetAttribute,\n  dataAttributeValue,\n}) => {\n  const getDataAttribute = () => {\n    const attributeValue =\n      elementToGetAttribute.getAttribute(dataAttributeValue);\n    return attributeValue;\n  };\n  return {\n    getDataAttribute,\n  };\n};\n\nconst customClassList = ({ classListVal, element }) => {\n  const toggleClassList = () => {\n    element.classList.toggle(classListVal);\n  };\n  return {\n    toggleClassList,\n  };\n};\n\nconst arrayOfElements = () => {\n  const elements = [];\n\n  const lengthGetter = function getLastItemFromElements() {\n    return elements.length;\n  };\n\n  const lastGetter = function getLastItemFromElements() {\n    return elements.slice(-1).at(-1);\n  };\n\n  const secondLastGetter = function getSecondLastItemFromElements() {\n    return elements.slice(-2).reverse().slice(-1).at(-1);\n  };\n\n  const adder = function addItemToElements(elementToAdd) {\n    return elements.push(elementToAdd);\n  };\n  return {\n    lengthGetter,\n    lastGetter,\n    secondLastGetter,\n    adder,\n  };\n};\n\nconst dynamicClassToggler = ({\n  classListValues,\n  elementToAddInArrays,\n  elementsInArray,\n  closeToggler,\n}) => {\n  const addElementInArray = () => elementsInArray.adder(elementToAddInArrays);\n\n  const toggleLastElementClassList = () => {\n    customClassList({\n      classListVal: classListValues,\n      element: elementsInArray.lastGetter(),\n    }).toggleClassList();\n  };\n\n  const toggleSecondLastElementClassList = () => {\n    customClassList({\n      classListVal: classListValues,\n      element: elementsInArray.secondLastGetter(),\n    }).toggleClassList();\n  };\n\n  const toggleThisElementsClassListWithCondition = (\n    classListValue,\n    ClassListValueMatch,\n  ) => {\n    if (\n      classListValue.classList.value === ClassListValueMatch.classList.value\n    ) {\n      toggleLastElementClassList();\n    }\n  };\n\n  const switchToggler =\n    function switchBetweenToggledItemToCurrentThenToggleItWhenToggled(\n      length,\n      lastElement,\n      secondLastElement,\n      classListValue,\n    ) {\n      if (\n        length >= 2 &&\n        lastElement.classList.value === classListValue &&\n        secondLastElement.classList.value === classListValue\n      ) {\n        toggleSecondLastElementClassList();\n\n        toggleThisElementsClassListWithCondition(\n          lastElement,\n          secondLastElement,\n        );\n      }\n    };\n\n  const toggleClass = () => {\n    addElementInArray();\n    toggleLastElementClassList();\n\n    const elementsInArrayLength = elementsInArray.lengthGetter();\n    const lastElemenInArray = elementsInArray.lastGetter();\n    const secondLastElementInArray = elementsInArray.secondLastGetter();\n    const elementToAddClassListValue = elementToAddInArrays.classList.value;\n\n    switchToggler(\n      elementsInArrayLength,\n      lastElemenInArray,\n      secondLastElementInArray,\n      elementToAddClassListValue,\n    );\n\n    outsideDropDown(lastElemenInArray, classListValues, closeToggler);\n  };\n\n  return {\n    toggleClass,\n  };\n};\n\nconst subNavInArray = arrayOfElements();\nconst navBarTogglerInArray = arrayOfElements();\n\nconst dropDown = ({\n  elementToListen,\n  itsDataAttribute,\n  subElement,\n  classListValue,\n  togglerClassListValue,\n  closerToggler,\n}) => {\n  const dropDownElement = () => {\n    elementToListen.forEach((element) => {\n      element.addEventListener('click', (e) => {\n        e.stopPropagation();\n\n        const dataAttributeValue = elementDataAttribute({\n          elementToGetAttribute: element,\n          dataAttributeValue: itsDataAttribute,\n        }).getDataAttribute();\n\n        const subNavItem = document.querySelector(\n          `${subElement}=\"${dataAttributeValue}\"]`,\n        );\n\n        subNavItem.addEventListener('click', (e2) => e2.stopPropagation());\n\n        dynamicClassToggler({\n          classListValues: classListValue,\n          elementToAddInArrays: subNavItem,\n          elementsInArray: subNavInArray,\n          closeToggler: closerToggler,\n        }).toggleClass();\n\n        dynamicClassToggler({\n          classListValues: togglerClassListValue,\n          elementToAddInArrays: element,\n          elementsInArray: navBarTogglerInArray,\n          closeToggler: closerToggler,\n        }).toggleClass();\n      });\n    });\n  };\n\n  return {\n    dropDownElement,\n  };\n};\n\nexport default dropDown;\n","import './assets/component-one/style.css';\nimport dropDown from './js/nav-func';\n\nwindow.addEventListener('load', () => {\n  const navBarItem = document.querySelectorAll('div[data-nav-bar-item]');\n\n  dropDown({\n    elementToListen: navBarItem,\n    itsDataAttribute: 'data-nav-bar-item',\n    subElement: 'div[data-nav-sub-item',\n    classListValue: 'visible',\n    togglerClassListValue: 'active-toggler',\n    closerToggler: 'div[id=\"main-container\"]',\n  }).dropDownElement();\n});\n"],"names":["lastElement","classListVals","closerObj","closeObj","document","querySelector","addEventListener","classListValueLength","length","classList","value","slice","toggle","customClassList","classListVal","element","toggleClassList","arrayOfElements","elements","lengthGetter","lastGetter","at","secondLastGetter","reverse","adder","elementToAdd","push","dynamicClassToggler","classListValues","elementToAddInArrays","elementsInArray","closeToggler","toggleLastElementClassList","switchToggler","secondLastElement","classListValue","ClassListValueMatch","toggleThisElementsClassListWithCondition","toggleClass","elementsInArrayLength","lastElemenInArray","secondLastElementInArray","elementToAddClassListValue","subNavInArray","navBarTogglerInArray","elementToListen","itsDataAttribute","subElement","togglerClassListValue","closerToggler","dropDownElement","forEach","e","stopPropagation","dataAttributeValue","elementToGetAttribute","getDataAttribute","getAttribute","elementDataAttribute","subNavItem","e2","window","navBarItem","querySelectorAll"],"sourceRoot":""}